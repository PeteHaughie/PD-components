#N canvas 538 164 577 353 12;
#N canvas 641 343 369 188 (subpatch) 0;
#X array \$0-array 4 float 2;
#X coords 0 1 4 -1 130 60 1 0 0;
#X restore 190 186 graph;
#X obj 13 60 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 13 279 *~;
#X obj 13 227 f 1;
#X obj 13 251 sig~;
#X floatatom 31 204 4 0 0 0 - - - 0;
#X obj 31 108 i;
#X obj 31 132 + 1;
#X obj 60 132 r \$0-arsize;
#X obj 31 156 mod;
#X floatatom 298 167 4 1 16 1 - \$0-arsizeinit \$0-arsize 8;
#N canvas 194 324 319 335 arraypres 0;
#X obj 34 160 f \$0;
#X obj 34 184 pack;
#X obj 76 110 until;
#X obj 148 16 i;
#X obj 148 40 + 1;
#X obj 108 87 sel 0;
#X obj 76 134 t b b;
#X obj 76 160 expr random(-1000 \, 1000)*0.001;
#X obj 148 65 mod;
#X obj 76 87 f;
#X obj 16 11 r \$0-arsize;
#X obj 16 35 t b b f f f;
#X obj 76 184 tabwrite \$0-array;
#X msg 34 208 \; \$1-array bounds 0 1 \$2 -1 \; \$1-array yticks 0 0.1 5 \; \$1-array xticks 0 1 2 \; \$1-array resize \$2;
#X connect 0 0 1 0;
#X connect 1 0 13 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 5 0 2 1;
#X connect 6 0 7 0;
#X connect 6 1 3 0;
#X connect 7 0 12 0;
#X connect 8 0 3 1;
#X connect 8 0 5 0;
#X connect 8 0 12 1;
#X connect 9 0 2 0;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 11 1 0 0;
#X connect 11 2 1 1;
#X connect 11 3 9 1;
#X connect 11 4 8 1;
#X restore 79 303 pd arraypres;
#X obj 31 180 tabread \$0-array;
#X obj 13 32 inlet;
#X text 13 9 Bang;
#N canvas 266 304 175 244 env 0;
#X obj 19 156 vline~;
#X obj 19 180 pow~ 2;
#X msg 19 132 \$1 0 \, 0 \$2 5;
#X obj 19 31 inlet;
#X text 19 10 Bang;
#X obj 65 31 inlet;
#X text 65 10 Amp;
#X obj 115 31 inlet;
#X text 115 10 Decay;
#X obj 65 85 pack;
#X obj 115 55 t b f;
#X obj 19 108 list, f 7;
#X obj 19 204 outlet~;
#X connect 0 0 1 0;
#X connect 1 0 12 0;
#X connect 2 0 0 0;
#X connect 3 0 11 0;
#X connect 5 0 9 0;
#X connect 7 0 10 0;
#X connect 9 0 11 1;
#X connect 10 0 9 0;
#X connect 10 1 9 1;
#X connect 11 0 2 0;
#X restore 50 260 pd env;
#X obj 13 84 t b b b, f 11;
#X obj 13 303 outlet~;
#X obj 113 32 inlet;
#X obj 113 60 unpack f f f;
#X obj 113 84 s \$0-ampinit;
#X obj 153 108 s \$0-decinit;
#X obj 194 132 s \$0-arsizeinit;
#X text 113 9 Preset inlet;
#X floatatom 257 256 4 0 5 1 Env\ Amp \$0-ampdis \$0-amp 8;
#X floatatom 257 275 4 49 999 1 Env\ Dec \$0-decdis \$0-dec 8;
#X obj 193 255 hsl 55 15 0 5 0 0 \$0-ampdis \$0-ampinit empty 53 7 0 8 #fcfcfc #000000 #000000 0 1;
#X obj 193 275 hsl 55 15 49 999 0 0 \$0-decdis \$0-decinit empty 53 7 0 8 #fcfcfc #000000 #000000 0 1;
#X obj 89 237 r \$0-dec;
#X obj 69 215 r \$0-amp;
#X obj 277 166 bng 15 250 50 0 \$0-arsizeinit \$0-rndm empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 360 25 loadbang;
#X obj 360 47 f \$0;
#X msg 360 69 \; \$1-arsizeinit 4 \; \$1-ampinit 1.5 \; \$1-decinit 499;
#X text 356 218 Prototype component for latent sequencer. arseq generates an array full of values between -1 and 1 and cycles through these modulated with simple envelope on every bang. Last updated 07.01.2024, f 28;
#X obj 360 167 array get \$0-array;
#X obj 360 145 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 360 189 print;
#X text 407 188 Get contents;
#X connect 1 0 16 0;
#X connect 2 0 17 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 3 1;
#X connect 6 0 7 0;
#X connect 7 0 6 1;
#X connect 7 0 9 0;
#X connect 8 0 9 1;
#X connect 9 0 12 0;
#X connect 12 0 5 0;
#X connect 13 0 1 0;
#X connect 15 0 2 1;
#X connect 16 0 3 0;
#X connect 16 1 15 0;
#X connect 16 2 6 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 19 1 21 0;
#X connect 19 2 22 0;
#X connect 28 0 15 2;
#X connect 29 0 15 1;
#X connect 31 0 32 0;
#X connect 32 0 33 0;
#X connect 35 0 37 0;
#X connect 36 0 35 0;
#X coords 0 -1 1 1 150 140 2 180 160;
